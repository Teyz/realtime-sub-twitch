import { __decorate } from "tslib";
import { rtfm } from '@twurple/common';
import { ConnectionAdapter } from "./ConnectionAdapter.mjs";
/**
 * A WebHook connection adapter that is designed to work as a middleware for a
 * connect compatible application rather than the built-in server.
 *
 * @hideProtected
 */
let MiddlewareAdapter = class MiddlewareAdapter extends ConnectionAdapter {
    /**
     * Creates a middleware connection adapter.
     *
     * @expandParams
     *
     * @param options
     */
    constructor(options) {
        super();
        this._hostName = options.hostName;
        this._pathPrefix = options.pathPrefix;
    }
    /** @protected */
    async getHostName() {
        return this._hostName;
    }
    /** @protected */
    get pathPrefix() {
        return this._pathPrefix;
    }
};
MiddlewareAdapter = __decorate([
    rtfm('eventsub', 'MiddlewareAdapter')
], MiddlewareAdapter);
export { MiddlewareAdapter };
