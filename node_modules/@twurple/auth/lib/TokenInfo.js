"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenInfo = void 0;
const tslib_1 = require("tslib");
/** @private */
const shared_utils_1 = require("@d-fischer/shared-utils");
const common_1 = require("@twurple/common");
/**
 * Information about an access token.
 */
let TokenInfo = class TokenInfo {
    /** @private */
    constructor(data) {
        this._data = data;
        this._obtainmentDate = new Date();
    }
    /**
     * The client ID.
     */
    get clientId() {
        return this._data.client_id;
    }
    /**
     * The ID of the authenticated user.
     */
    get userId() {
        var _a;
        return (_a = this._data.user_id) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * The name of the authenticated user.
     */
    get userName() {
        var _a;
        return (_a = this._data.login) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * The scopes for which the token is valid.
     */
    get scopes() {
        return this._data.scopes;
    }
    /**
     * The time when the token will expire.
     *
     * If this returns null, it means that the token never expires (happens with some old client IDs).
     */
    get expiryDate() {
        if (!this._data.expires_in) {
            return null;
        }
        return new Date(this._obtainmentDate.getTime() + this._data.expires_in * 1000);
    }
};
tslib_1.__decorate([
    shared_utils_1.Enumerable(false)
], TokenInfo.prototype, "_data", void 0);
TokenInfo = tslib_1.__decorate([
    common_1.rtfm('auth', 'TokenInfo', 'clientId')
], TokenInfo);
exports.TokenInfo = TokenInfo;
