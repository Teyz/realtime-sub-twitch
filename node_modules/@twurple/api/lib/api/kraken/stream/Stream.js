"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Stream = void 0;
const tslib_1 = require("tslib");
const shared_utils_1 = require("@d-fischer/shared-utils");
const common_1 = require("@twurple/common");
const Channel_1 = require("../channel/Channel");
/**
 * A Twitch stream.
 */
let Stream = class Stream {
    /** @private */
    constructor(data, client) {
        this._data = data;
        this._client = client;
    }
    /**
     * The ID of the stream.
     */
    get id() {
        return this._data._id.toString();
    }
    /**
     * The game played on the stream.
     */
    get game() {
        return this._data.game;
    }
    /**
     * The current number of concurrent viewers.
     */
    get viewers() {
        return this._data.viewers;
    }
    /**
     * The height of the stream video.
     */
    get videoHeight() {
        return this._data.video_height;
    }
    /**
     * The average FPS (frames per second) that are shown on the stream.
     */
    get averageFps() {
        return this._data.average_fps;
    }
    /**
     * The delay of the stream, in seconds.
     */
    get delay() {
        return this._data.delay;
    }
    /**
     * The time when the stream started.
     */
    get startDate() {
        return new Date(this._data.created_at);
    }
    /**
     * Whether the stream is running a playlist.
     */
    get isPlaylist() {
        return this._data.is_playlist;
    }
    /**
     * The type of the stream.
     */
    get type() {
        return this._data.stream_type;
    }
    /**
     * Gets the URL of a preview image for the stream.
     *
     * @param size The size of the image.
     */
    getPreviewUrl(size) {
        return this._data.preview[size];
    }
    /**
     * The channel where the stream is shown.
     */
    get channel() {
        return new Channel_1.Channel(this._data.channel, this._client);
    }
};
tslib_1.__decorate([
    shared_utils_1.Enumerable(false)
], Stream.prototype, "_data", void 0);
tslib_1.__decorate([
    shared_utils_1.Enumerable(false)
], Stream.prototype, "_client", void 0);
Stream = tslib_1.__decorate([
    common_1.rtfm('api', 'Stream', 'id')
], Stream);
exports.Stream = Stream;
