"use strict";
var EmoteSetList_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmoteSetList = void 0;
const tslib_1 = require("tslib");
const cache_decorators_1 = require("@d-fischer/cache-decorators");
const shared_utils_1 = require("@d-fischer/shared-utils");
const common_1 = require("@twurple/common");
/**
 * A list of emotes, grouped into emote sets, that a user can use.
 */
let EmoteSetList = EmoteSetList_1 = class EmoteSetList {
    /** @private */
    constructor(data) {
        this._data = data;
    }
    /**
     * Finds the emote ID for the given emote code.
     *
     * @param emoteCode The emote code to check for.
     */
    findEmoteId(emoteCode) {
        for (const emoteSet of Object.values(this._data)) {
            for (const emote of emoteSet) {
                if (EmoteSetList_1._testEmoteCode(emote.code, emoteCode)) {
                    return emote.id;
                }
            }
        }
        return undefined;
    }
    static _testEmoteCode(code, text) {
        if (!code.includes('\\')) {
            return code === text;
        }
        const re = new RegExp(code);
        const match = re.exec(text);
        return (match === null || match === void 0 ? void 0 : match.index) === 0 && match[0].length === match.input.length;
    }
};
tslib_1.__decorate([
    shared_utils_1.Enumerable(false)
], EmoteSetList.prototype, "_data", void 0);
tslib_1.__decorate([
    cache_decorators_1.Cached(Infinity, true)
], EmoteSetList.prototype, "findEmoteId", null);
EmoteSetList = EmoteSetList_1 = tslib_1.__decorate([
    cache_decorators_1.Cacheable,
    common_1.rtfm('api', 'EmoteSetList')
], EmoteSetList);
exports.EmoteSetList = EmoteSetList;
