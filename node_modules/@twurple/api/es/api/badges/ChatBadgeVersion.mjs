import { __decorate } from "tslib";
import { Enumerable } from '@d-fischer/shared-utils';
import { rtfm } from '@twurple/common';
/**
 * A version of a badge.
 */
let ChatBadgeVersion = class ChatBadgeVersion {
    /** @private */
    constructor(data) {
        this._data = data;
    }
    /**
     * The action to execute when the badge is clicked.
     */
    get clickAction() {
        return this._data.click_action;
    }
    /**
     * The URL to visit when the badge is clicked.
     *
     * Only applies if clickAction === 'visit_url'.
     */
    get clickUrl() {
        return this._data.click_url;
    }
    /**
     * The description of the badge.
     */
    get description() {
        return this._data.description;
    }
    /**
     * Gets an image URL for the given scale.
     *
     * @param scale The scale of the badge image.
     */
    getImageUrl(scale) {
        // eslint-disable-next-line @typescript-eslint/non-nullable-type-assertion-style
        return this._data[`image_url_${scale}x`];
    }
    /**
     * The title of the badge.
     */
    get title() {
        return this._data.title;
    }
};
__decorate([
    Enumerable(false)
], ChatBadgeVersion.prototype, "_data", void 0);
ChatBadgeVersion = __decorate([
    rtfm('api', 'ChatBadgeVersion')
], ChatBadgeVersion);
export { ChatBadgeVersion };
