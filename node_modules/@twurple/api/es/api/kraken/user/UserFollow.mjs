import { __decorate } from "tslib";
import { Enumerable } from '@d-fischer/shared-utils';
import { rtfm } from '@twurple/common';
import { Channel } from "../channel/Channel.mjs";
/**
 * A relation of a previously given user following a channel.
 */
let UserFollow = class UserFollow {
    /** @private */
    constructor(data, client) {
        this._data = data;
        this._client = client;
    }
    /**
     * The date when the user followed the channel.
     */
    get followDate() {
        return new Date(this._data.created_at);
    }
    /**
     * Whether the user has notifications enabled for the channel.
     */
    get hasNotifications() {
        return this._data.notifications;
    }
    /**
     * The followed channel.
     */
    get channel() {
        return new Channel(this._data.channel, this._client);
    }
    /**
     * The ID of the followed channel.
     */
    get channelId() {
        return this._data.channel._id;
    }
};
__decorate([
    Enumerable(false)
], UserFollow.prototype, "_data", void 0);
__decorate([
    Enumerable(false)
], UserFollow.prototype, "_client", void 0);
UserFollow = __decorate([
    rtfm('api', 'UserFollow', 'channelId')
], UserFollow);
export { UserFollow };
