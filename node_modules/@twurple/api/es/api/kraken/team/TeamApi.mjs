import { __decorate } from "tslib";
import { rtfm } from '@twurple/common';
import { BaseApi } from "../../BaseApi.mjs";
import { Team } from "./Team.mjs";
import { TeamWithUsers } from "./TeamWithUsers.mjs";
/**
 * The API methods that deal with teams.
 *
 * Can be accessed using `client.kraken.teams` on an {@ApiClient} instance.
 *
 * ## Example
 * ```ts
 * const api = new ApiClient(new StaticAuthProvider(clientId, accessToken));
 * const team = await api.kraken.teams.getTeamByName('staff');
 * ```
 */
let TeamApi = class TeamApi extends BaseApi {
    /**
     * Get a list of teams.
     *
     * @param page The result page you want to retrieve.
     * @param limit The number of results you want to retrieve.
     */
    async getTeams(page, limit = 25) {
        const query = {};
        if (page) {
            query.offset = ((page - 1) * limit).toString();
        }
        query.limit = limit.toString();
        const data = await this._client.callApi({
            url: 'teams',
            query
        });
        return data.teams.map(teamData => new Team(teamData, this._client));
    }
    /**
     * Retrieves the team data for the given team name.
     *
     * @param team The team name you want to look up.
     */
    async getTeamByName(team) {
        const teamData = await this._client.callApi({ url: `teams/${team}` });
        return new TeamWithUsers(teamData, this._client);
    }
};
TeamApi = __decorate([
    rtfm('api', 'TeamApi')
], TeamApi);
export { TeamApi };
