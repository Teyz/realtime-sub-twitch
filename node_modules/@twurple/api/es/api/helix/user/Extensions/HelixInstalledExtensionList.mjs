import { __decorate } from "tslib";
import { Enumerable } from '@d-fischer/shared-utils';
import { rtfm } from '@twurple/common';
import { HelixInstalledExtension } from "./HelixInstalledExtension.mjs";
/**
 * A list of extensions installed in a channel.
 */
let HelixInstalledExtensionList = class HelixInstalledExtensionList {
    /** @private */
    constructor(data) {
        this._data = data;
    }
    getExtensionAtSlot(type, slotId) {
        const data = this._data[type][slotId];
        return data.active ? new HelixInstalledExtension(type, slotId, data) : null;
    }
    getExtensionsForSlotType(type) {
        return [...Object.entries(this._data[type])]
            .filter((entry) => entry[1].active)
            .map(([slotId, slotData]) => new HelixInstalledExtension(type, slotId, slotData));
    }
    getAllExtensions() {
        return [...Object.entries(this._data)].flatMap(([type, typeEntries]) => [...Object.entries(typeEntries)]
            .filter((entry) => entry[1].active)
            .map(([slotId, slotData]) => new HelixInstalledExtension(type, slotId, slotData)));
    }
};
__decorate([
    Enumerable(false)
], HelixInstalledExtensionList.prototype, "_data", void 0);
HelixInstalledExtensionList = __decorate([
    rtfm('api', 'HelixInstalledExtensionList')
], HelixInstalledExtensionList);
export { HelixInstalledExtensionList };
