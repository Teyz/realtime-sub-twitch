import { __decorate } from "tslib";
import { Enumerable } from '@d-fischer/shared-utils';
import { rtfm } from '@twurple/common';
/**
 * Information about the ban of a user.
 */
let HelixBan = class HelixBan {
    /** @private */
    constructor(data, client) {
        this._data = data;
        this._client = client;
    }
    /**
     * The ID of the banned user.
     */
    get userId() {
        return this._data.user_id;
    }
    /**
     * The name of the banned user.
     */
    get userName() {
        return this._data.user_login;
    }
    /**
     * The display name of the banned user.
     */
    get userDisplayName() {
        return this._data.user_name;
    }
    /**
     * Retrieves more information about the user.
     */
    async getUser() {
        return (await this._client.helix.users.getUserById(this._data.user_id));
    }
    /**
     * The date when the ban will expire; null for permanent bans.
     */
    get expiryDate() {
        return this._data.expires_at ? new Date(this._data.expires_at) : null;
    }
};
__decorate([
    Enumerable(false)
], HelixBan.prototype, "_data", void 0);
__decorate([
    Enumerable(false)
], HelixBan.prototype, "_client", void 0);
HelixBan = __decorate([
    rtfm('api', 'HelixBan', 'userId')
], HelixBan);
export { HelixBan };
