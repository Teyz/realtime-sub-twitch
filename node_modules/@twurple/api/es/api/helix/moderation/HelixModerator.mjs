import { __decorate } from "tslib";
import { Enumerable } from '@d-fischer/shared-utils';
import { rtfm } from '@twurple/common';
/**
 * Information about the moderator status of a user.
 */
let HelixModerator = class HelixModerator {
    /** @private */
    constructor(data, client) {
        this._data = data;
        this._client = client;
    }
    /**
     * The ID of the user.
     */
    get userId() {
        return this._data.user_id;
    }
    /**
     * The name of the user.
     */
    get userName() {
        return this._data.user_login;
    }
    /**
     * The display name of the user.
     */
    get userDisplayName() {
        return this._data.user_name;
    }
    /**
     * Retrieves more information about the user.
     */
    async getUser() {
        return (await this._client.helix.users.getUserById(this._data.user_id));
    }
};
__decorate([
    Enumerable(false)
], HelixModerator.prototype, "_data", void 0);
__decorate([
    Enumerable(false)
], HelixModerator.prototype, "_client", void 0);
HelixModerator = __decorate([
    rtfm('api', 'HelixModerator', 'userId')
], HelixModerator);
export { HelixModerator };
