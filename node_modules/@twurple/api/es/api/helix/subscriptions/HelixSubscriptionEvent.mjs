import { __decorate } from "tslib";
import { rtfm } from '@twurple/common';
import { HelixSubscription } from "./HelixSubscription.mjs";
/**
 * An event that indicates the change of a subscription status, i.e. subscribing, unsubscribing or sending the monthly notification.
 */
let HelixSubscriptionEvent = class HelixSubscriptionEvent extends HelixSubscription {
    /** @private */
    constructor(eventData, client) {
        super(eventData.event_data, client);
        this._eventData = eventData;
    }
    /**
     * The unique ID of the subscription event.
     */
    get eventId() {
        return this._eventData.id;
    }
    /**
     * The type of the subscription event.
     */
    get eventType() {
        return this._eventData.event_type;
    }
    /**
     * The date of the subscription event.
     */
    get eventDate() {
        return new Date(this._eventData.event_timestamp);
    }
    /**
     * The version of the subscription event.
     */
    get eventVersion() {
        return this._eventData.version;
    }
    /**
     * The message sent with the subscription event.
     */
    get eventMessage() {
        var _a;
        return (_a = this._eventData.event_data.message) !== null && _a !== void 0 ? _a : '';
    }
};
HelixSubscriptionEvent = __decorate([
    rtfm('api', 'HelixSubscriptionEvent', 'userId')
], HelixSubscriptionEvent);
export { HelixSubscriptionEvent };
