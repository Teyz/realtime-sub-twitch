import { __decorate } from "tslib";
import { Enumerable } from '@d-fischer/shared-utils';
import { rtfm } from '@twurple/common';
/**
 * A subscription to a Twitch WebHook.
 */
let HelixWebHookSubscription = class HelixWebHookSubscription {
    /** @private */
    constructor(data, client) {
        this._data = data;
        this._client = client;
    }
    /**
     * The topic the WebHook is listening to.
     */
    get topicUrl() {
        return this._data.topic;
    }
    /**
     * The URL that will be called for every subscribed event.
     */
    get callbackUrl() {
        return this._data.callback;
    }
    /**
     * The time when the subscription will expire.
     */
    get expiryDate() {
        return new Date(this._data.expires_at);
    }
    /**
     * Unsubscribe from the WebHook.
     */
    async unsubscribe() {
        await this._client.helix.webHooks.sendHubRequest({
            mode: 'unsubscribe',
            topicUrl: this.topicUrl,
            callbackUrl: this.callbackUrl
        });
    }
};
__decorate([
    Enumerable(false)
], HelixWebHookSubscription.prototype, "_data", void 0);
__decorate([
    Enumerable(false)
], HelixWebHookSubscription.prototype, "_client", void 0);
HelixWebHookSubscription = __decorate([
    rtfm('api', 'HelixWebHookSubscription')
], HelixWebHookSubscription);
export { HelixWebHookSubscription };
