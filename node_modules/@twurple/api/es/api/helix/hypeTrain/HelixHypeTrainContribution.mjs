import { __decorate } from "tslib";
import { Enumerable } from '@d-fischer/shared-utils';
import { rtfm } from '@twurple/common';
/**
 * A Hype Train contributor.
 */
let HelixHypeTrainContribution = class HelixHypeTrainContribution {
    /** @private */
    constructor(data, client) {
        this._data = data;
        this._client = client;
    }
    /**
     * The ID of the user contributing to the Hype Train.
     */
    get userId() {
        return this._data.user;
    }
    /**
     * Retrieves additional information about the user contributing to the Hype Train.
     */
    async getUser() {
        return (await this._client.helix.users.getUserById(this._data.user));
    }
    /**
     * The Hype Train event type.
     */
    get type() {
        return this._data.type;
    }
    /**
     * The total contribution amount in subs or bits.
     */
    get total() {
        return this._data.total;
    }
};
__decorate([
    Enumerable(false)
], HelixHypeTrainContribution.prototype, "_data", void 0);
__decorate([
    Enumerable(false)
], HelixHypeTrainContribution.prototype, "_client", void 0);
HelixHypeTrainContribution = __decorate([
    rtfm('api', 'HelixHypeTrainContribution', 'userId')
], HelixHypeTrainContribution);
export { HelixHypeTrainContribution };
