import { __awaiter, __decorate, __generator } from "tslib";
import { Enumerable } from '@d-fischer/shared-utils';
import { rtfm } from 'twitch-common';
import { EventSubChannelPredictionBeginOutcome } from "./Common/EventSubChannelPredictionBeginOutcome.mjs";
/**
 * An EventSub event representing a prediction starting in a channel.
 */
var EventSubChannelPredictionBeginEvent = /** @class */ (function () {
    /** @private */
    function EventSubChannelPredictionBeginEvent(_data, client) {
        this._data = _data;
        this._client = client;
    }
    Object.defineProperty(EventSubChannelPredictionBeginEvent.prototype, "id", {
        /**
         * The ID of the prediction.
         */
        get: function () {
            return this._data.id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelPredictionBeginEvent.prototype, "broadcasterId", {
        /**
         * The ID of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelPredictionBeginEvent.prototype, "broadcasterName", {
        /**
         * The name of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelPredictionBeginEvent.prototype, "broadcasterDisplayName", {
        /**
         * The display name of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the broadcaster.
     */
    EventSubChannelPredictionBeginEvent.prototype.getBroadcaster = function () {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.broadcaster_user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    Object.defineProperty(EventSubChannelPredictionBeginEvent.prototype, "title", {
        /**
         * The title of the prediction.
         */
        get: function () {
            return this._data.title;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelPredictionBeginEvent.prototype, "outcomes", {
        /**
         * The possible outcomes of the prediction.
         */
        get: function () {
            return this._data.outcomes.map(function (data) { return new EventSubChannelPredictionBeginOutcome(data); });
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelPredictionBeginEvent.prototype, "startDate", {
        /**
         * The time when the prediction started.
         */
        get: function () {
            return new Date(this._data.started_at);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelPredictionBeginEvent.prototype, "lockDate", {
        /**
         * The time when the prediction is locked.
         */
        get: function () {
            return new Date(this._data.locks_at);
        },
        enumerable: false,
        configurable: true
    });
    __decorate([
        Enumerable(false)
    ], EventSubChannelPredictionBeginEvent.prototype, "_client", void 0);
    EventSubChannelPredictionBeginEvent = __decorate([
        rtfm('twitch-eventsub', 'EventSubChannelPredictionBeginEvent', 'broadcasterId')
    ], EventSubChannelPredictionBeginEvent);
    return EventSubChannelPredictionBeginEvent;
}());
export { EventSubChannelPredictionBeginEvent };
