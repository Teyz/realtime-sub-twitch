import type { ApiClient, HelixUser } from 'twitch';
/** @private */
export interface EventSubChannelPredictionPredictorData {
    user_name: string;
    user_login: string;
    user_id: string;
    channel_points_won: number | null;
    channel_points_used: number;
}
/**
 * A user that voted on a prediction.
 */
export declare class EventSubChannelPredictionPredictor {
    private readonly _data;
    private readonly _client;
    /** @private */
    constructor(data: EventSubChannelPredictionPredictorData, client: ApiClient);
    /**
     * The ID of the predictor.
     */
    get userId(): string;
    /**
     * The name of the predictor.
     */
    get userName(): string;
    /**
     * The display name of the predictor.
     */
    get userDisplayName(): string;
    /**
     * Retrieves more information about the predictor.
     */
    getUser(): Promise<HelixUser>;
    /**
     * The number of channel points the predictor used.
     */
    get channelPointsUsed(): number;
    /**
     * The number of channel points the predictor won, or null if they didn't win (yet).
     */
    get channelPointsWon(): number | null;
}
