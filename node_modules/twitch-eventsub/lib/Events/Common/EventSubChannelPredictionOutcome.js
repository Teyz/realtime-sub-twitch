"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSubChannelPredictionOutcome = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
var EventSubChannelPredictionBeginOutcome_1 = require("./EventSubChannelPredictionBeginOutcome");
var EventSubChannelPredictionPredictor_1 = require("./EventSubChannelPredictionPredictor");
/**
 * A possible outcome of a prediction.
 */
var EventSubChannelPredictionOutcome = /** @class */ (function (_super) {
    tslib_1.__extends(EventSubChannelPredictionOutcome, _super);
    /** @private */
    function EventSubChannelPredictionOutcome(data, client) {
        var _this = _super.call(this, data) || this;
        _this._client = client;
        return _this;
    }
    Object.defineProperty(EventSubChannelPredictionOutcome.prototype, "users", {
        /**
         * The number of users that predicted the outcome.
         */
        get: function () {
            return this._data.users;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelPredictionOutcome.prototype, "channelPoints", {
        /**
         * The number of channel points that were bet on the outcome.
         */
        get: function () {
            return this._data.channel_points;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelPredictionOutcome.prototype, "topPredictors", {
        /**
         * The top predictors of the choice.
         */
        get: function () {
            var _this = this;
            return this._data.top_predictors.map(function (data) { return new EventSubChannelPredictionPredictor_1.EventSubChannelPredictionPredictor(data, _this._client); });
        },
        enumerable: false,
        configurable: true
    });
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], EventSubChannelPredictionOutcome.prototype, "_client", void 0);
    EventSubChannelPredictionOutcome = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-eventsub', 'EventSubChannelPredictionOutcome', 'id')
    ], EventSubChannelPredictionOutcome);
    return EventSubChannelPredictionOutcome;
}(EventSubChannelPredictionBeginOutcome_1.EventSubChannelPredictionBeginOutcome));
exports.EventSubChannelPredictionOutcome = EventSubChannelPredictionOutcome;
