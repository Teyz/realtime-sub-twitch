"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSubChannelSubscriptionEndEvent = void 0;
var tslib_1 = require("tslib");
var shared_utils_1 = require("@d-fischer/shared-utils");
var twitch_common_1 = require("twitch-common");
/**
 * An EventSub event representing the end of a channel subscription.
 */
var EventSubChannelSubscriptionEndEvent = /** @class */ (function () {
    /** @private */
    function EventSubChannelSubscriptionEndEvent(_data, client) {
        this._data = _data;
        this._client = client;
    }
    Object.defineProperty(EventSubChannelSubscriptionEndEvent.prototype, "userId", {
        /**
         * The ID of the user whose subscription is ending.
         */
        get: function () {
            return this._data.user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelSubscriptionEndEvent.prototype, "userName", {
        /**
         * The name of the user whose subscription is ending.
         */
        get: function () {
            return this._data.user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelSubscriptionEndEvent.prototype, "userDisplayName", {
        /**
         * The display name of the user whose subscription is ending.
         */
        get: function () {
            return this._data.user_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the user whose subscription is ending.
     */
    EventSubChannelSubscriptionEndEvent.prototype.getUser = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    Object.defineProperty(EventSubChannelSubscriptionEndEvent.prototype, "broadcasterId", {
        /**
         * The ID of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelSubscriptionEndEvent.prototype, "broadcasterName", {
        /**
         * The name of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_login;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelSubscriptionEndEvent.prototype, "broadcasterDisplayName", {
        /**
         * The display name of the broadcaster.
         */
        get: function () {
            return this._data.broadcaster_user_name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Retrieves more information about the broadcaster.
     */
    EventSubChannelSubscriptionEndEvent.prototype.getBroadcaster = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._client.helix.users.getUserById(this._data.broadcaster_user_id)];
                    case 1: return [2 /*return*/, (_a.sent())];
                }
            });
        });
    };
    Object.defineProperty(EventSubChannelSubscriptionEndEvent.prototype, "tier", {
        /**
         * The tier of the subscription, either 1000, 2000 or 3000.
         */
        get: function () {
            return this._data.tier;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EventSubChannelSubscriptionEndEvent.prototype, "isGift", {
        /**
         * Whether the subscription has been gifted.
         */
        get: function () {
            return this._data.is_gift;
        },
        enumerable: false,
        configurable: true
    });
    tslib_1.__decorate([
        shared_utils_1.Enumerable(false)
    ], EventSubChannelSubscriptionEndEvent.prototype, "_client", void 0);
    EventSubChannelSubscriptionEndEvent = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-eventsub', 'EventSubChannelSubscriptionEndEvent', 'userId')
    ], EventSubChannelSubscriptionEndEvent);
    return EventSubChannelSubscriptionEndEvent;
}());
exports.EventSubChannelSubscriptionEndEvent = EventSubChannelSubscriptionEndEvent;
